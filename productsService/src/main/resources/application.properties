

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/productsdb
spring.datasource.username=root
spring.datasource.password=admin
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.flyway.baselineOnMigrate=true
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.main.allow-bean-definition-overriding=true
server.port=5051
server.error.include-message=always

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:5050/oauth2/jwks
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:5050
logging.level.org.springframework.security=TRACE

# OAuth2 Provider Configuration
spring.security.oauth2.client.registration.myOAuthServer.client-id=client
spring.security.oauth2.client.registration.myOAuthServer.client-secret=secret
spring.security.oauth2.client.registration.myOAuthServer.scope=openid,profile,read
spring.security.oauth2.client.registration.myOAuthServer.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.myOAuthServer.redirect-uri=http://127.0.0.1:5050/login/oauth2/code/client
spring.security.oauth2.client.registration.myOAuthServer.provider=myOAuthProvider

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.myOAuthProvider.authorization-uri=http://localhost:5050/oauth2/authorize
spring.security.oauth2.client.provider.myOAuthProvider.token-uri=http://localhost:5050/oauth2/token
spring.security.oauth2.client.provider.myOAuthProvider.jwk-set-uri=http://localhost:5050/oauth2/jwks
spring.security.oauth2.client.provider.myOAuthProvider.user-info-uri=http://localhost:5050/userinfo
spring.security.oauth2.client.provider.myOAuthProvider.user-name-attribute=sub

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=products-Service 

#spring.security.oauth2.client.registration.github.client-id=
#spring.security.oauth2.client.registration.github.client-secret=