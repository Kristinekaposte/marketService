
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/orderdb
spring.datasource.username=root
spring.datasource.password=admin
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.flyway.baselineOnMigrate=true
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.main.allow-bean-definition-overriding=true
server.port=5052
server.error.include-message=always

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#Actuator config, for app health
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


#resilience4j properties
resilience4j.circuitbreaker.instances.OrderService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.OrderService.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.OrderService.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.OrderService.sliding-window-size=5
resilience4j.circuitbreaker.instances.OrderService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.OrderService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.OrderService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.OrderService.automatic-transition-from-open-to-half-open-enabled=true


spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:5050/oauth2/jwks
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:5050
logging.level.org.springframework.security=TRACE


# OAuth2 client Configuration
spring.security.oauth2.client.registration.myOAuthServer.client-id=client
spring.security.oauth2.client.registration.myOAuthServer.client-secret=secret
spring.security.oauth2.client.registration.myOAuthServer.scope=openid,profile,read
spring.security.oauth2.client.registration.myOAuthServer.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.myOAuthServer.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.myOAuthServer.redirect-uri=http://127.0.0.1:5050/login/oauth2/code/client
spring.security.oauth2.client.registration.myOAuthServer.provider=myOAuthProvider

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.myOAuthProvider.authorization-uri=http://localhost:5050/oauth2/authorize
spring.security.oauth2.client.provider.myOAuthProvider.token-uri=http://localhost:5050/oauth2/token
spring.security.oauth2.client.provider.myOAuthProvider.jwk-set-uri=http://localhost:5050/oauth2/jwks
spring.security.oauth2.client.provider.myOAuthProvider.user-info-uri=http://localhost:5050/userinfo
spring.security.oauth2.client.provider.myOAuthProvider.user-name-attribute=sub

#Kafka properties
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.marketService.orderService.event.OrderPlacedEvent
spring.kafka.topic.name=orderNotificationTopic

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=order-service


